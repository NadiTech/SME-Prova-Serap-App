// Mocks generated by Mockito 5.4.2 from annotations
// in appserap/test/unit/prova_download/prova_download_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:appserap/dtos/prova.response.dto.dart' as _i7;
import 'package:appserap/dtos/prova_anterior.response.dto.dart' as _i11;
import 'package:appserap/dtos/prova_detalhes.response.dto.dart' as _i8;
import 'package:appserap/dtos/prova_detalhes_caderno.response.dto.dart' as _i9;
import 'package:appserap/dtos/questao.response.dto.dart' as _i13;
import 'package:appserap/dtos/questao_completa.response.dto.dart' as _i14;
import 'package:appserap/dtos/questao_detalhes_legado.response.dto.dart'
    as _i15;
import 'package:appserap/dtos/questao_resposta.response.dto.dart' as _i10;
import 'package:appserap/enums/deficiencia.enum.dart' as _i19;
import 'package:appserap/enums/fonte_tipo.enum.dart' as _i18;
import 'package:appserap/enums/modalidade.enum.dart' as _i17;
import 'package:appserap/services/api_service.dart' as _i4;
import 'package:appserap/services/rest/download.service.dart' as _i20;
import 'package:appserap/services/rest/prova.service.dart' as _i5;
import 'package:appserap/services/rest/questao.service.dart' as _i12;
import 'package:appserap/stores/usuario.store.dart' as _i16;
import 'package:chopper/chopper.dart' as _i2;
import 'package:http/http.dart' as _i21;
import 'package:mobx/mobx.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeChopperClient_0 extends _i1.SmartFake implements _i2.ChopperClient {
  _FakeChopperClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeType_1 extends _i1.SmartFake implements Type {
  _FakeType_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2<BodyType> extends _i1.SmartFake
    implements _i2.Response<BodyType> {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeObservableList_3<T> extends _i1.SmartFake
    implements _i3.ObservableList<T> {
  _FakeObservableList_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_4 extends _i1.SmartFake
    implements _i3.ReactiveContext {
  _FakeReactiveContext_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i4.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [ProvaService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProvaService extends _i1.Mock implements _i5.ProvaService {
  MockProvaService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ChopperClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeChopperClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.ChopperClient);
  @override
  set client(_i2.ChopperClient? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Type get definitionType => (super.noSuchMethod(
        Invocation.getter(#definitionType),
        returnValue: _FakeType_1(
          this,
          Invocation.getter(#definitionType),
        ),
      ) as Type);
  @override
  _i6.Future<_i2.Response<List<_i7.ProvaResponseDTO>>> getProvas() =>
      (super.noSuchMethod(
        Invocation.method(
          #getProvas,
          [],
        ),
        returnValue: _i6.Future<_i2.Response<List<_i7.ProvaResponseDTO>>>.value(
            _FakeResponse_2<List<_i7.ProvaResponseDTO>>(
          this,
          Invocation.method(
            #getProvas,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Response<List<_i7.ProvaResponseDTO>>>);
  @override
  _i6.Future<_i2.Response<_i8.ProvaDetalhesResponseDTO>> getResumoProva(
          {required int? idProva}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getResumoProva,
          [],
          {#idProva: idProva},
        ),
        returnValue:
            _i6.Future<_i2.Response<_i8.ProvaDetalhesResponseDTO>>.value(
                _FakeResponse_2<_i8.ProvaDetalhesResponseDTO>(
          this,
          Invocation.method(
            #getResumoProva,
            [],
            {#idProva: idProva},
          ),
        )),
      ) as _i6.Future<_i2.Response<_i8.ProvaDetalhesResponseDTO>>);
  @override
  _i6.Future<
      _i2.Response<_i9.ProvaDetalhesCadernoResponseDTO>> getResumoProvaCaderno({
    required int? idProva,
    required String? caderno,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getResumoProvaCaderno,
          [],
          {
            #idProva: idProva,
            #caderno: caderno,
          },
        ),
        returnValue:
            _i6.Future<_i2.Response<_i9.ProvaDetalhesCadernoResponseDTO>>.value(
                _FakeResponse_2<_i9.ProvaDetalhesCadernoResponseDTO>(
          this,
          Invocation.method(
            #getResumoProvaCaderno,
            [],
            {
              #idProva: idProva,
              #caderno: caderno,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response<_i9.ProvaDetalhesCadernoResponseDTO>>);
  @override
  _i6.Future<_i2.Response<int>> getStatusProva({required int? idProva}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStatusProva,
          [],
          {#idProva: idProva},
        ),
        returnValue: _i6.Future<_i2.Response<int>>.value(_FakeResponse_2<int>(
          this,
          Invocation.method(
            #getStatusProva,
            [],
            {#idProva: idProva},
          ),
        )),
      ) as _i6.Future<_i2.Response<int>>);
  @override
  _i6.Future<_i2.Response<bool>> setStatusProva({
    required int? idProva,
    required int? status,
    required int? tipoDispositivo,
    int? dataInicio,
    int? dataFim,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStatusProva,
          [],
          {
            #idProva: idProva,
            #status: status,
            #tipoDispositivo: tipoDispositivo,
            #dataInicio: dataInicio,
            #dataFim: dataFim,
          },
        ),
        returnValue: _i6.Future<_i2.Response<bool>>.value(_FakeResponse_2<bool>(
          this,
          Invocation.method(
            #setStatusProva,
            [],
            {
              #idProva: idProva,
              #status: status,
              #tipoDispositivo: tipoDispositivo,
              #dataInicio: dataInicio,
              #dataFim: dataFim,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response<bool>>);
  @override
  _i6.Future<_i2.Response<List<_i10.QuestaoRespostaResponseDTO>>>
      getRespostasPorProvaId({required int? idProva}) => (super.noSuchMethod(
            Invocation.method(
              #getRespostasPorProvaId,
              [],
              {#idProva: idProva},
            ),
            returnValue: _i6.Future<
                    _i2.Response<List<_i10.QuestaoRespostaResponseDTO>>>.value(
                _FakeResponse_2<List<_i10.QuestaoRespostaResponseDTO>>(
              this,
              Invocation.method(
                #getRespostasPorProvaId,
                [],
                {#idProva: idProva},
              ),
            )),
          ) as _i6.Future<_i2.Response<List<_i10.QuestaoRespostaResponseDTO>>>);
  @override
  _i6.Future<_i2.Response<List<_i11.ProvaAnteriorResponseDTO>>>
      getProvasAnteriores() => (super.noSuchMethod(
            Invocation.method(
              #getProvasAnteriores,
              [],
            ),
            returnValue: _i6.Future<
                    _i2.Response<List<_i11.ProvaAnteriorResponseDTO>>>.value(
                _FakeResponse_2<List<_i11.ProvaAnteriorResponseDTO>>(
              this,
              Invocation.method(
                #getProvasAnteriores,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Response<List<_i11.ProvaAnteriorResponseDTO>>>);
}

/// A class which mocks [QuestaoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestaoService extends _i1.Mock implements _i12.QuestaoService {
  MockQuestaoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ChopperClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeChopperClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.ChopperClient);
  @override
  set client(_i2.ChopperClient? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Type get definitionType => (super.noSuchMethod(
        Invocation.getter(#definitionType),
        returnValue: _FakeType_1(
          this,
          Invocation.getter(#definitionType),
        ),
      ) as Type);
  @override
  _i6.Future<_i2.Response<_i13.QuestaoResponseDTO>> getQuestao(
          {required int? idQuestao}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuestao,
          [],
          {#idQuestao: idQuestao},
        ),
        returnValue: _i6.Future<_i2.Response<_i13.QuestaoResponseDTO>>.value(
            _FakeResponse_2<_i13.QuestaoResponseDTO>(
          this,
          Invocation.method(
            #getQuestao,
            [],
            {#idQuestao: idQuestao},
          ),
        )),
      ) as _i6.Future<_i2.Response<_i13.QuestaoResponseDTO>>);
  @override
  _i6.Future<_i2.Response<List<_i14.QuestaoCompletaResponseDTO>>>
      getQuestaoCompleta({required List<int>? ids}) => (super.noSuchMethod(
            Invocation.method(
              #getQuestaoCompleta,
              [],
              {#ids: ids},
            ),
            returnValue: _i6.Future<
                    _i2.Response<List<_i14.QuestaoCompletaResponseDTO>>>.value(
                _FakeResponse_2<List<_i14.QuestaoCompletaResponseDTO>>(
              this,
              Invocation.method(
                #getQuestaoCompleta,
                [],
                {#ids: ids},
              ),
            )),
          ) as _i6.Future<_i2.Response<List<_i14.QuestaoCompletaResponseDTO>>>);
  @override
  _i6.Future<_i2.Response<List<_i15.QuestaoDetalhesLegadoResponseDTO>>>
      getQuestaoCompletaLegado({required List<int>? idsLegado}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getQuestaoCompletaLegado,
              [],
              {#idsLegado: idsLegado},
            ),
            returnValue: _i6.Future<
                    _i2.Response<
                        List<_i15.QuestaoDetalhesLegadoResponseDTO>>>.value(
                _FakeResponse_2<List<_i15.QuestaoDetalhesLegadoResponseDTO>>(
              this,
              Invocation.method(
                #getQuestaoCompletaLegado,
                [],
                {#idsLegado: idsLegado},
              ),
            )),
          ) as _i6.Future<
              _i2.Response<List<_i15.QuestaoDetalhesLegadoResponseDTO>>>);
}

/// A class which mocks [UsuarioStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsuarioStore extends _i1.Mock implements _i16.UsuarioStore {
  MockUsuarioStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set token(String? value) => super.noSuchMethod(
        Invocation.setter(
          #token,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set tokenDataHoraExpiracao(DateTime? value) => super.noSuchMethod(
        Invocation.setter(
          #tokenDataHoraExpiracao,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set ultimoLogin(DateTime? value) => super.noSuchMethod(
        Invocation.setter(
          #ultimoLogin,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set nome(String? value) => super.noSuchMethod(
        Invocation.setter(
          #nome,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set codigoEOL(String? value) => super.noSuchMethod(
        Invocation.setter(
          #codigoEOL,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set ano(String? value) => super.noSuchMethod(
        Invocation.setter(
          #ano,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set tipoTurno(String? value) => super.noSuchMethod(
        Invocation.setter(
          #tipoTurno,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set tamanhoFonte(double? value) => super.noSuchMethod(
        Invocation.setter(
          #tamanhoFonte,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i17.ModalidadeEnum get modalidade => (super.noSuchMethod(
        Invocation.getter(#modalidade),
        returnValue: _i17.ModalidadeEnum.NAO_CADASTRADO,
      ) as _i17.ModalidadeEnum);
  @override
  set modalidade(_i17.ModalidadeEnum? value) => super.noSuchMethod(
        Invocation.setter(
          #modalidade,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get inicioTurno => (super.noSuchMethod(
        Invocation.getter(#inicioTurno),
        returnValue: 0,
      ) as int);
  @override
  set inicioTurno(int? value) => super.noSuchMethod(
        Invocation.setter(
          #inicioTurno,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get fimTurno => (super.noSuchMethod(
        Invocation.getter(#fimTurno),
        returnValue: 0,
      ) as int);
  @override
  set fimTurno(int? value) => super.noSuchMethod(
        Invocation.setter(
          #fimTurno,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set dreAbreviacao(String? value) => super.noSuchMethod(
        Invocation.setter(
          #dreAbreviacao,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set escola(String? value) => super.noSuchMethod(
        Invocation.setter(
          #escola,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set turma(String? value) => super.noSuchMethod(
        Invocation.setter(
          #turma,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set familiaFonte(_i18.FonteTipoEnum? value) => super.noSuchMethod(
        Invocation.setter(
          #familiaFonte,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.ObservableList<_i19.DeficienciaEnum> get deficiencias =>
      (super.noSuchMethod(
        Invocation.getter(#deficiencias),
        returnValue: _FakeObservableList_3<_i19.DeficienciaEnum>(
          this,
          Invocation.getter(#deficiencias),
        ),
      ) as _i3.ObservableList<_i19.DeficienciaEnum>);
  @override
  set deficiencias(_i3.ObservableList<_i19.DeficienciaEnum>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #deficiencias,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isRespondendoProva => (super.noSuchMethod(
        Invocation.getter(#isRespondendoProva),
        returnValue: false,
      ) as bool);
  @override
  set isRespondendoProva(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isRespondendoProva,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isAdmin => (super.noSuchMethod(
        Invocation.getter(#isAdmin),
        returnValue: false,
      ) as bool);
  @override
  set isAdmin(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isAdmin,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isLogado => (super.noSuchMethod(
        Invocation.getter(#isLogado),
        returnValue: false,
      ) as bool);
  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_4(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<void> carregarUsuario() => (super.noSuchMethod(
        Invocation.method(
          #carregarUsuario,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> atualizarDados({
    required String? nome,
    String? codigoEOL,
    String? token,
    required String? ano,
    required String? tipoTurno,
    DateTime? ultimoLogin,
    required double? tamanhoFonte,
    required _i18.FonteTipoEnum? familiaFonte,
    required _i17.ModalidadeEnum? modalidade,
    required int? inicioTurno,
    required int? fimTurno,
    required String? dreAbreviacao,
    required String? escola,
    required String? turma,
    required List<_i19.DeficienciaEnum>? deficiencias,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #atualizarDados,
          [],
          {
            #nome: nome,
            #codigoEOL: codigoEOL,
            #token: token,
            #ano: ano,
            #tipoTurno: tipoTurno,
            #ultimoLogin: ultimoLogin,
            #tamanhoFonte: tamanhoFonte,
            #familiaFonte: familiaFonte,
            #modalidade: modalidade,
            #inicioTurno: inicioTurno,
            #fimTurno: fimTurno,
            #dreAbreviacao: dreAbreviacao,
            #escola: escola,
            #turma: turma,
            #deficiencias: deficiencias,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> atualizarDadosAdm({
    required String? nome,
    required bool? isAdmin,
    String? codigoEOL,
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #atualizarDadosAdm,
          [],
          {
            #nome: nome,
            #isAdmin: isAdmin,
            #codigoEOL: codigoEOL,
            #token: token,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [DownloadService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDownloadService extends _i1.Mock implements _i20.DownloadService {
  MockDownloadService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ChopperClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeChopperClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.ChopperClient);
  @override
  set client(_i2.ChopperClient? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Type get definitionType => (super.noSuchMethod(
        Invocation.getter(#definitionType),
        returnValue: _FakeType_1(
          this,
          Invocation.getter(#definitionType),
        ),
      ) as Type);
  @override
  _i6.Future<_i2.Response<String>> informarDownloadConcluido({
    required int? provaId,
    required int? tipoDispositivo,
    required String? dispositivoId,
    required String? modeloDispositivo,
    required String? versao,
    required String? dataHora,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #informarDownloadConcluido,
          [],
          {
            #provaId: provaId,
            #tipoDispositivo: tipoDispositivo,
            #dispositivoId: dispositivoId,
            #modeloDispositivo: modeloDispositivo,
            #versao: versao,
            #dataHora: dataHora,
          },
        ),
        returnValue:
            _i6.Future<_i2.Response<String>>.value(_FakeResponse_2<String>(
          this,
          Invocation.method(
            #informarDownloadConcluido,
            [],
            {
              #provaId: provaId,
              #tipoDispositivo: tipoDispositivo,
              #dispositivoId: dispositivoId,
              #modeloDispositivo: modeloDispositivo,
              #versao: versao,
              #dataHora: dataHora,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response<String>>);
  @override
  _i6.Future<_i2.Response<void>> removerDownloads({
    required String? chaveAPI,
    required List<String>? ids,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removerDownloads,
          [],
          {
            #chaveAPI: chaveAPI,
            #ids: ids,
          },
        ),
        returnValue: _i6.Future<_i2.Response<void>>.value(_FakeResponse_2<void>(
          this,
          Invocation.method(
            #removerDownloads,
            [],
            {
              #chaveAPI: chaveAPI,
              #ids: ids,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response<void>>);
}

/// A class which mocks [BaseResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseResponse extends _i1.Mock implements _i21.BaseResponse {
  MockBaseResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get statusCode => (super.noSuchMethod(
        Invocation.getter(#statusCode),
        returnValue: 0,
      ) as int);
  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  bool get isRedirect => (super.noSuchMethod(
        Invocation.getter(#isRedirect),
        returnValue: false,
      ) as bool);
  @override
  bool get persistentConnection => (super.noSuchMethod(
        Invocation.getter(#persistentConnection),
        returnValue: false,
      ) as bool);
}
