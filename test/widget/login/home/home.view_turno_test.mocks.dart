// Mocks generated by Mockito 5.3.0 from annotations
// in appserap/test/widget/login/home/home.view.turno_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:appserap/database/app.database.dart' as _i19;
import 'package:appserap/dtos/prova.response.dto.dart' as _i13;
import 'package:appserap/dtos/prova_anterior.response.dto.dart' as _i17;
import 'package:appserap/dtos/prova_detalhes.response.dto.dart' as _i14;
import 'package:appserap/dtos/prova_detalhes_caderno.response.dto.dart' as _i15;
import 'package:appserap/dtos/questao_resposta.dto.dart' as _i18;
import 'package:appserap/dtos/questao_resposta.response.dto.dart' as _i16;
import 'package:appserap/services/api.dart' as _i3;
import 'package:appserap/services/rest/admin.service.dart' as _i5;
import 'package:appserap/services/rest/auth.admin.service.dart' as _i6;
import 'package:appserap/services/rest/usuario.service.dart' as _i4;
import 'package:appserap/stores/principal.store.dart' as _i10;
import 'package:appserap/stores/usuario.store.dart' as _i7;
import 'package:chopper/chopper.dart' as _i2;
import 'package:connectivity_plus/connectivity_plus.dart' as _i11;
import 'package:drift/drift.dart' as _i9;
import 'package:mobx/mobx.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeChopperClient_0 extends _i1.SmartFake implements _i2.ChopperClient {
  _FakeChopperClient_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAutenticacaoService_1 extends _i1.SmartFake
    implements _i3.AutenticacaoService {
  _FakeAutenticacaoService_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeProvaService_2 extends _i1.SmartFake implements _i3.ProvaService {
  _FakeProvaService_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeQuestaoService_3 extends _i1.SmartFake
    implements _i3.QuestaoService {
  _FakeQuestaoService_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAlternativaService_4 extends _i1.SmartFake
    implements _i3.AlternativaService {
  _FakeAlternativaService_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeArquivoService_5 extends _i1.SmartFake
    implements _i3.ArquivoService {
  _FakeArquivoService_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeVersaoService_6 extends _i1.SmartFake implements _i3.VersaoService {
  _FakeVersaoService_6(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeQuestaoRespostaService_7 extends _i1.SmartFake
    implements _i3.QuestaoRespostaService {
  _FakeQuestaoRespostaService_7(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeUsuarioService_8 extends _i1.SmartFake
    implements _i4.UsuarioService {
  _FakeUsuarioService_8(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeOrientacaoInicialService_9 extends _i1.SmartFake
    implements _i3.OrientacaoInicialService {
  _FakeOrientacaoInicialService_9(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeContextoProvaService_10 extends _i1.SmartFake
    implements _i3.ContextoProvaService {
  _FakeContextoProvaService_10(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeDownloadService_11 extends _i1.SmartFake
    implements _i3.DownloadService {
  _FakeDownloadService_11(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAdminService_12 extends _i1.SmartFake implements _i5.AdminService {
  _FakeAdminService_12(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAutenticacaoAdminService_13 extends _i1.SmartFake
    implements _i6.AutenticacaoAdminService {
  _FakeAutenticacaoAdminService_13(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeLogService_14 extends _i1.SmartFake implements _i3.LogService {
  _FakeLogService_14(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeConfiguracaoService_15 extends _i1.SmartFake
    implements _i3.ConfiguracaoService {
  _FakeConfiguracaoService_15(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeUsuarioStore_16 extends _i1.SmartFake implements _i7.UsuarioStore {
  _FakeUsuarioStore_16(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeObservableStream_17<T> extends _i1.SmartFake
    implements _i8.ObservableStream<T> {
  _FakeObservableStream_17(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeReactiveContext_18 extends _i1.SmartFake
    implements _i8.ReactiveContext {
  _FakeReactiveContext_18(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeType_19 extends _i1.SmartFake implements Type {
  _FakeType_19(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_20<BodyType> extends _i1.SmartFake
    implements _i2.Response<BodyType> {
  _FakeResponse_20(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeMigrationStrategy_21 extends _i1.SmartFake
    implements _i9.MigrationStrategy {
  _FakeMigrationStrategy_21(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ChopperClient get chopper => (super.noSuchMethod(
          Invocation.getter(#chopper),
          returnValue: _FakeChopperClient_0(this, Invocation.getter(#chopper)))
      as _i2.ChopperClient);
  @override
  _i3.AutenticacaoService get auth =>
      (super.noSuchMethod(Invocation.getter(#auth),
              returnValue:
                  _FakeAutenticacaoService_1(this, Invocation.getter(#auth)))
          as _i3.AutenticacaoService);
  @override
  _i3.ProvaService get prova => (super.noSuchMethod(Invocation.getter(#prova),
          returnValue: _FakeProvaService_2(this, Invocation.getter(#prova)))
      as _i3.ProvaService);
  @override
  _i3.QuestaoService get questao => (super.noSuchMethod(
          Invocation.getter(#questao),
          returnValue: _FakeQuestaoService_3(this, Invocation.getter(#questao)))
      as _i3.QuestaoService);
  @override
  _i3.AlternativaService get alternativa => (super.noSuchMethod(
          Invocation.getter(#alternativa),
          returnValue:
              _FakeAlternativaService_4(this, Invocation.getter(#alternativa)))
      as _i3.AlternativaService);
  @override
  _i3.ArquivoService get arquivo => (super.noSuchMethod(
          Invocation.getter(#arquivo),
          returnValue: _FakeArquivoService_5(this, Invocation.getter(#arquivo)))
      as _i3.ArquivoService);
  @override
  _i3.VersaoService get versao => (super.noSuchMethod(
          Invocation.getter(#versao),
          returnValue: _FakeVersaoService_6(this, Invocation.getter(#versao)))
      as _i3.VersaoService);
  @override
  _i3.QuestaoRespostaService get questaoResposta =>
      (super.noSuchMethod(Invocation.getter(#questaoResposta),
              returnValue: _FakeQuestaoRespostaService_7(
                  this, Invocation.getter(#questaoResposta)))
          as _i3.QuestaoRespostaService);
  @override
  _i4.UsuarioService get usuario => (super.noSuchMethod(
          Invocation.getter(#usuario),
          returnValue: _FakeUsuarioService_8(this, Invocation.getter(#usuario)))
      as _i4.UsuarioService);
  @override
  _i3.OrientacaoInicialService get orientacoesIniciais =>
      (super.noSuchMethod(Invocation.getter(#orientacoesIniciais),
              returnValue: _FakeOrientacaoInicialService_9(
                  this, Invocation.getter(#orientacoesIniciais)))
          as _i3.OrientacaoInicialService);
  @override
  _i3.ContextoProvaService get contextoProva =>
      (super.noSuchMethod(Invocation.getter(#contextoProva),
              returnValue: _FakeContextoProvaService_10(
                  this, Invocation.getter(#contextoProva)))
          as _i3.ContextoProvaService);
  @override
  _i3.DownloadService get download =>
      (super.noSuchMethod(Invocation.getter(#download),
              returnValue:
                  _FakeDownloadService_11(this, Invocation.getter(#download)))
          as _i3.DownloadService);
  @override
  _i5.AdminService get admin => (super.noSuchMethod(Invocation.getter(#admin),
          returnValue: _FakeAdminService_12(this, Invocation.getter(#admin)))
      as _i5.AdminService);
  @override
  _i6.AutenticacaoAdminService get adminAuth =>
      (super.noSuchMethod(Invocation.getter(#adminAuth),
              returnValue: _FakeAutenticacaoAdminService_13(
                  this, Invocation.getter(#adminAuth)))
          as _i6.AutenticacaoAdminService);
  @override
  _i3.LogService get log => (super.noSuchMethod(Invocation.getter(#log),
          returnValue: _FakeLogService_14(this, Invocation.getter(#log)))
      as _i3.LogService);
  @override
  _i3.ConfiguracaoService get configuracao => (super.noSuchMethod(
      Invocation.getter(#configuracao),
      returnValue: _FakeConfiguracaoService_15(
          this, Invocation.getter(#configuracao))) as _i3.ConfiguracaoService);
}

/// A class which mocks [PrincipalStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrincipalStore extends _i1.Mock implements _i10.PrincipalStore {
  MockPrincipalStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.UsuarioStore get usuario => (super.noSuchMethod(
          Invocation.getter(#usuario),
          returnValue: _FakeUsuarioStore_16(this, Invocation.getter(#usuario)))
      as _i7.UsuarioStore);
  @override
  _i8.ObservableStream<_i11.ConnectivityResult> get conexaoStream =>
      (super.noSuchMethod(Invocation.getter(#conexaoStream),
              returnValue: _FakeObservableStream_17<_i11.ConnectivityResult>(
                  this, Invocation.getter(#conexaoStream)))
          as _i8.ObservableStream<_i11.ConnectivityResult>);
  @override
  set conexaoStream(
          _i8.ObservableStream<_i11.ConnectivityResult>? _conexaoStream) =>
      super.noSuchMethod(Invocation.setter(#conexaoStream, _conexaoStream),
          returnValueForMissingStub: null);
  @override
  set dispositivoId(String? _dispositivoId) =>
      super.noSuchMethod(Invocation.setter(#dispositivoId, _dispositivoId),
          returnValueForMissingStub: null);
  @override
  _i11.ConnectivityResult get status =>
      (super.noSuchMethod(Invocation.getter(#status),
              returnValue: _i11.ConnectivityResult.bluetooth)
          as _i11.ConnectivityResult);
  @override
  set status(_i11.ConnectivityResult? _status) =>
      super.noSuchMethod(Invocation.setter(#status, _status),
          returnValueForMissingStub: null);
  @override
  String get versaoApp =>
      (super.noSuchMethod(Invocation.getter(#versaoApp), returnValue: '')
          as String);
  @override
  set versaoApp(String? _versaoApp) =>
      super.noSuchMethod(Invocation.setter(#versaoApp, _versaoApp),
          returnValueForMissingStub: null);
  @override
  bool get temConexao =>
      (super.noSuchMethod(Invocation.getter(#temConexao), returnValue: false)
          as bool);
  @override
  String get versao =>
      (super.noSuchMethod(Invocation.getter(#versao), returnValue: '')
          as String);
  @override
  _i8.ReactiveContext get context =>
      (super.noSuchMethod(Invocation.getter(#context),
              returnValue:
                  _FakeReactiveContext_18(this, Invocation.getter(#context)))
          as _i8.ReactiveContext);
  @override
  void Function(Object?, [Object?, StackTrace?]) get shout =>
      (super.noSuchMethod(Invocation.getter(#shout),
              returnValue: (Object? __p0, [Object? __p1, StackTrace? __p2]) {})
          as void Function(Object?, [Object?, StackTrace?]));
  @override
  void Function(Object?, [Object?, StackTrace?]) get severe =>
      (super.noSuchMethod(Invocation.getter(#severe),
              returnValue: (Object? __p0, [Object? __p1, StackTrace? __p2]) {})
          as void Function(Object?, [Object?, StackTrace?]));
  @override
  void Function(Object?, [Object?, StackTrace?]) get warning =>
      (super.noSuchMethod(Invocation.getter(#warning),
              returnValue: (Object? __p0, [Object? __p1, StackTrace? __p2]) {})
          as void Function(Object?, [Object?, StackTrace?]));
  @override
  void Function(Object?, [Object?, StackTrace?]) get info =>
      (super.noSuchMethod(Invocation.getter(#info),
              returnValue: (Object? __p0, [Object? __p1, StackTrace? __p2]) {})
          as void Function(Object?, [Object?, StackTrace?]));
  @override
  void Function(Object?, [Object?, StackTrace?]) get config =>
      (super.noSuchMethod(Invocation.getter(#config),
              returnValue: (Object? __p0, [Object? __p1, StackTrace? __p2]) {})
          as void Function(Object?, [Object?, StackTrace?]));
  @override
  void Function(Object?, [Object?, StackTrace?]) get fine =>
      (super.noSuchMethod(Invocation.getter(#fine),
              returnValue: (Object? __p0, [Object? __p1, StackTrace? __p2]) {})
          as void Function(Object?, [Object?, StackTrace?]));
  @override
  void Function(Object?, [Object?, StackTrace?]) get finer =>
      (super.noSuchMethod(Invocation.getter(#finer),
              returnValue: (Object? __p0, [Object? __p1, StackTrace? __p2]) {})
          as void Function(Object?, [Object?, StackTrace?]));
  @override
  void Function(Object?, [Object?, StackTrace?]) get finest =>
      (super.noSuchMethod(Invocation.getter(#finest),
              returnValue: (Object? __p0, [Object? __p1, StackTrace? __p2]) {})
          as void Function(Object?, [Object?, StackTrace?]));
  @override
  _i12.Future<void> setup() =>
      (super.noSuchMethod(Invocation.method(#setup, []),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  _i12.Future<dynamic> onChangeConexao(_i11.ConnectivityResult? resultado) =>
      (super.noSuchMethod(Invocation.method(#onChangeConexao, [resultado]),
          returnValue: _i12.Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  _i12.Future<void> obterVersaoDoApp() =>
      (super.noSuchMethod(Invocation.method(#obterVersaoDoApp, []),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> sair() => (super.noSuchMethod(Invocation.method(#sair, []),
          returnValue: _i12.Future<void>.value(),
          returnValueForMissingStub: _i12.Future<void>.value())
      as _i12.Future<void>);
}

/// A class which mocks [ProvaService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProvaService extends _i1.Mock implements _i3.ProvaService {
  MockProvaService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ChopperClient get client => (super.noSuchMethod(
          Invocation.getter(#client),
          returnValue: _FakeChopperClient_0(this, Invocation.getter(#client)))
      as _i2.ChopperClient);
  @override
  set client(_i2.ChopperClient? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client),
          returnValueForMissingStub: null);
  @override
  Type get definitionType => (super.noSuchMethod(
          Invocation.getter(#definitionType),
          returnValue: _FakeType_19(this, Invocation.getter(#definitionType)))
      as Type);
  @override
  _i12.Future<_i2.Response<List<_i13.ProvaResponseDTO>>> getProvas() => (super
          .noSuchMethod(Invocation.method(#getProvas, []),
              returnValue:
                  _i12.Future<_i2.Response<List<_i13.ProvaResponseDTO>>>.value(
                      _FakeResponse_20<List<_i13.ProvaResponseDTO>>(
                          this, Invocation.method(#getProvas, []))))
      as _i12.Future<_i2.Response<List<_i13.ProvaResponseDTO>>>);
  @override
  _i12.Future<_i2.Response<_i14.ProvaDetalhesResponseDTO>> getResumoProva(
          {int? idProva}) =>
      (super.noSuchMethod(Invocation.method(#getResumoProva, [], {#idProva: idProva}),
              returnValue:
                  _i12.Future<_i2.Response<_i14.ProvaDetalhesResponseDTO>>.value(
                      _FakeResponse_20<_i14.ProvaDetalhesResponseDTO>(
                          this,
                          Invocation.method(
                              #getResumoProva, [], {#idProva: idProva}))))
          as _i12.Future<_i2.Response<_i14.ProvaDetalhesResponseDTO>>);
  @override
  _i12.Future<_i2.Response<_i15.ProvaDetalhesCadernoResponseDTO>> getResumoProvaCaderno(
          {int? idProva, String? caderno}) =>
      (super.noSuchMethod(Invocation.method(#getResumoProvaCaderno, [], {#idProva: idProva, #caderno: caderno}),
              returnValue:
                  _i12.Future<_i2.Response<_i15.ProvaDetalhesCadernoResponseDTO>>.value(
                      _FakeResponse_20<_i15.ProvaDetalhesCadernoResponseDTO>(
                          this,
                          Invocation.method(
                              #getResumoProvaCaderno, [], {#idProva: idProva, #caderno: caderno}))))
          as _i12.Future<_i2.Response<_i15.ProvaDetalhesCadernoResponseDTO>>);
  @override
  _i12.Future<_i2.Response<int>> getStatusProva({int? idProva}) => (super
      .noSuchMethod(Invocation.method(#getStatusProva, [], {#idProva: idProva}),
          returnValue: _i12.Future<_i2.Response<int>>.value(
              _FakeResponse_20<int>(
                  this,
                  Invocation.method(
                      #getStatusProva, [], {#idProva: idProva})))) as _i12
      .Future<_i2.Response<int>>);
  @override
  _i12.Future<_i2.Response<bool>> setStatusProva(
          {int? idProva,
          int? status,
          int? tipoDispositivo,
          int? dataInicio,
          int? dataFim}) =>
      (super.noSuchMethod(
          Invocation.method(#setStatusProva, [], {
            #idProva: idProva,
            #status: status,
            #tipoDispositivo: tipoDispositivo,
            #dataInicio: dataInicio,
            #dataFim: dataFim
          }),
          returnValue:
              _i12.Future<_i2.Response<bool>>.value(_FakeResponse_20<bool>(
                  this,
                  Invocation.method(#setStatusProva, [], {
                    #idProva: idProva,
                    #status: status,
                    #tipoDispositivo: tipoDispositivo,
                    #dataInicio: dataInicio,
                    #dataFim: dataFim
                  })))) as _i12.Future<_i2.Response<bool>>);
  @override
  _i12.Future<_i2.Response<List<_i16.QuestaoRespostaResponseDTO>>>
      getRespostasPorProvaId({int? idProva}) => (super.noSuchMethod(
          Invocation.method(#getRespostasPorProvaId, [], {#idProva: idProva}),
          returnValue:
              _i12.Future<_i2.Response<List<_i16.QuestaoRespostaResponseDTO>>>.value(
                  _FakeResponse_20<List<_i16.QuestaoRespostaResponseDTO>>(this,
                      Invocation.method(#getRespostasPorProvaId, [], {#idProva: idProva})))) as _i12
          .Future<_i2.Response<List<_i16.QuestaoRespostaResponseDTO>>>);
  @override
  _i12.Future<_i2.Response<List<_i17.ProvaAnteriorResponseDTO>>>
      getProvasAnteriores() => (super.noSuchMethod(
          Invocation.method(#getProvasAnteriores, []),
          returnValue:
              _i12.Future<_i2.Response<List<_i17.ProvaAnteriorResponseDTO>>>.value(
                  _FakeResponse_20<List<_i17.ProvaAnteriorResponseDTO>>(this,
                      Invocation.method(#getProvasAnteriores, [])))) as _i12
          .Future<_i2.Response<List<_i17.ProvaAnteriorResponseDTO>>>);
}

/// A class which mocks [QuestaoRespostaService].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestaoRespostaService extends _i1.Mock
    implements _i3.QuestaoRespostaService {
  MockQuestaoRespostaService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ChopperClient get client => (super.noSuchMethod(
          Invocation.getter(#client),
          returnValue: _FakeChopperClient_0(this, Invocation.getter(#client)))
      as _i2.ChopperClient);
  @override
  set client(_i2.ChopperClient? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client),
          returnValueForMissingStub: null);
  @override
  Type get definitionType => (super.noSuchMethod(
          Invocation.getter(#definitionType),
          returnValue: _FakeType_19(this, Invocation.getter(#definitionType)))
      as Type);
  @override
  _i12.Future<_i2.Response<_i16.QuestaoRespostaResponseDTO>> getRespostaPorQuestaoId(
          {int? questaoId}) =>
      (super.noSuchMethod(Invocation.method(#getRespostaPorQuestaoId, [], {#questaoId: questaoId}),
              returnValue:
                  _i12.Future<_i2.Response<_i16.QuestaoRespostaResponseDTO>>.value(
                      _FakeResponse_20<_i16.QuestaoRespostaResponseDTO>(
                          this,
                          Invocation.method(
                              #getRespostaPorQuestaoId, [], {#questaoId: questaoId}))))
          as _i12.Future<_i2.Response<_i16.QuestaoRespostaResponseDTO>>);
  @override
  _i12.Future<_i2.Response<bool>> postResposta(
          {String? chaveAPI, List<_i18.QuestaoRespostaDTO>? respostas}) =>
      (super.noSuchMethod(Invocation.method(#postResposta, [], {#chaveAPI: chaveAPI, #respostas: respostas}),
          returnValue: _i12.Future<_i2.Response<bool>>.value(
              _FakeResponse_20<bool>(
                  this,
                  Invocation.method(#postResposta, [], {
                    #chaveAPI: chaveAPI,
                    #respostas: respostas
                  })))) as _i12.Future<_i2.Response<bool>>);
}

/// A class which mocks [AppDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDatabase extends _i1.Mock implements _i19.AppDatabase {
  MockAppDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion =>
      (super.noSuchMethod(Invocation.getter(#schemaVersion), returnValue: 0)
          as int);
  @override
  _i9.MigrationStrategy get migration => (super.noSuchMethod(
          Invocation.getter(#migration),
          returnValue:
              _FakeMigrationStrategy_21(this, Invocation.getter(#migration)))
      as _i9.MigrationStrategy);
  @override
  _i12.Future<dynamic> limpar() =>
      (super.noSuchMethod(Invocation.method(#limpar, []),
          returnValue: _i12.Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  _i12.Future<dynamic> limparBanco() =>
      (super.noSuchMethod(Invocation.method(#limparBanco, []),
          returnValue: _i12.Future<dynamic>.value()) as _i12.Future<dynamic>);
}
